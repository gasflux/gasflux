# gasflux_config.yaml

output_dir: ~/gasflux_reports

# required columns and maximum ranges
required_cols:
  latitude: [-90, 90]
  longitude: [-180, 180]
  height_ato: [-200, 500] # meters above takeoff
  windspeed: [0, 50] # m/s
  winddir: [0, 360] # degrees
  temperature: [-50, 60] # degrees Celsius
  pressure: [900, 1100] # hPa/mb

# optional gas columns and maximum ppm ranges. Relative concentrations are used so offset can be wrong as long as gain and linearity are correct.
gases:
  ch4: [1.5, 500]
  co2: [300, 5000]
  c2h6: [-0.5, 10]

strategies:
  background: "algorithm" # currently only algorithm (via pybaselines) is supported
  sensor: "insitu" # currently only insitu is supported
  spatial: "curtain" # currently "curtain" and "spiral" are supported
  interpolation: "kriging" # currently only kriging is supported

# baseline settings. 
algorithmic_baseline_settings:
  algorithm: fastchrom
  fastchrom: {
    "half_window": 6, 
    "threshold": "custom", #
    "min_fwhm": ~,
    "interp_half_window": 3, 
    "smooth_half_window": 3, 
    "weights": ~, 
    "max_iter": 100, 
    "min_length": 2}
  fabc : {
    "lam": 10000,  # The smoothing parameter. Larger values will create smoother baselines. Default is 1e6.
    "scale": 10,  # The scale at which to calculate the continuous wavelet transform. Should be approximately equal to the index-based full-width-at-half-maximum of the peaks or features in the data.  Default is None, which will use half of the value from optimize_window(), which is not always a good value, but at least scales with the number of data points and gives a starting point for tuning the parameter.
    "diff_order": 2}  # The order of the differential matrix. Must be greater than 0. Default is 2 (second order differential matrix). Typical values are 2 or 1.
  dietrich : {
    "poly_order": 5,
    "smooth_half_window": 5,}
  golotvin : {
    "half_window": 2, 
    "sections": 10}

# kriging settings
semivariogram_settings:
  model: spherical
  estimator: cressie
  n_lags: 20
  bin_func: even
  fit_method: lm
  ### Size of the search window; if the algorithm complains about not having enough neighbours, consider increasing these
  maxlag: 100 # in meters. 
  tolerance: 10 # in degrees
  azimuth: 0 # in degrees (0 is right/horizontal)
  bandwidth: 20 # in meters 
   # fit_sigma: linear # this should allow for a spatial uncertainty but currently producing bugs
ordinary_kriging_settings:
  min_points: 3 
  max_points: 100
  grid_resolution: 500
  min_nodes: 10
  y_min: ~  # manual override for the minimum y value. Leave blank or ~ to use ymin.
  cut_ground: True # cuts everything below the ground level in the krig (need height_agl to work at the moment)
